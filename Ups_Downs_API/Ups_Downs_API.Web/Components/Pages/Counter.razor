@page "/counter"
@rendermode InteractiveServer
@inject IJSRuntime JS

<PageTitle>Counter</PageTitle>

<h1>Counter</h1>

<button class="btn btn-primary" @onclick="SetItemAsync">Save Item to Session Storage</button>
<input type="text" @bind="inputValue" />

<p>Response: @inputValue</p>

<button class="btn btn-primary" @onclick="GetItemAsync">Retrieve Item from Session Storage</button>

<p>Response: @sessionItem</p>
@code {
    private string requestResponse = "";
    private string postResponse = "";
    private string inputValue = "";
    private string sessionItem = "";



    public async Task SetItemAsync()
    {
        await JS.InvokeVoidAsync("sessionStorage.setItem", "username", inputValue);
    }

    public async Task GetItemAsync()
    {
        sessionItem = await JS.InvokeAsync<string>("sessionStorage.getItem", "username");
    }










    [Inject]
    private HttpClient _httpClient { get; set; }

    private async Task CallRequest()
    {

        //create an object



        // Make a GET request to your API
        requestResponse = await _httpClient.GetStringAsync("https://localhost:7466/counter");

    }

    private async Task CallPost()
    {

        //create an object
        var myPostObject = new Library.PostObject("test message sent using http Post request");

        // Serialize the object to JSON
        var json = System.Text.Json.JsonSerializer.Serialize(myPostObject);
        var content = new StringContent(json, System.Text.Encoding.UTF8, "application/json");

        // Send the POST request
        var response = await _httpClient.PostAsync("https://localhost:7466/counter", content);
        postResponse = await response.Content.ReadAsStringAsync();
    }

    
}
